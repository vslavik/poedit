<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003"
         ToolsVersion="4.0">

  <PropertyGroup>
    <MSBuildCommunityTasksPath>$(MSBuildProjectDirectory)\packages\MSBuildTasks.1.4.0.88\tools</MSBuildCommunityTasksPath>
  </PropertyGroup>
  <Import Project="$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.targets"
          Condition="Exists('$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.targets')" />
  <UsingTask AssemblyFile="$(MSBuildCommunityTasksLib)" TaskName="MSBuild.Community.Tasks.Git.GitCommits"
             Condition="Exists('$(MSBuildCommunityTasksPath)\MSBuild.Community.Tasks.targets')" />

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
    <DebugSuffix>d</DebugSuffix>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
    <DebugSuffix></DebugSuffix>
  </PropertyGroup>
  
  <PropertyGroup>
    <ResourcesOutDir>$(OutDir)Resources\</ResourcesOutDir>
    <TranslationsOutDir>$(OutDir)Translations\</TranslationsOutDir>
    <GettextOutDir>$(OutDir)GettextTools\</GettextOutDir>
    <GettextBinDir>packages\Gettext.Tools.0.19.5.1\tools\</GettextBinDir>
    <Msgfmt>$(GettextBinDir)msgfmt.exe -c</Msgfmt>

    <PoDirPoedit>locales</PoDirPoedit>
    <PoDirWX>deps\wx\locale</PoDirWX>
    <PoDirWXMSW>deps\wx\locale\msw</PoDirWXMSW>
  </PropertyGroup>

  <ItemGroup>
    <DLLs Include="deps\icu4c\bin\icudt??.dll" />
    <DLLs Include="deps\icu4c\bin\icuuc??$(DebugSuffix).dll" />
    <DLLs Include="deps\icu4c\bin\icuin??$(DebugSuffix).dll" />
    <DLLs Include="deps\icu4c\source\data\in\icudt*.dat" />
  </ItemGroup>

  <ItemGroup>
    <DataFiles Include="src\resources\*.xrc" />
    <DataFiles Include="artwork\*.png" />
    <DataFiles Include="artwork\windows\*.png" />
    <DataFiles Include="artwork\windows\*.ico" />
    <DataFiles Include="artwork\windows\vista\*.ico" />
  </ItemGroup>

  <ItemGroup>
    <TranslationFiles Include="$(PoDirPoedit)\*.po" />
    <TranslationFilesWX Include="$(PoDirWX)\*.po" />
    <TranslationFilesWXMSW Include="$(PoDirWXMSW)\*.po" />
    <!--<TranslationFilesGettext Include="$(GettextDir)share\**\*.mo" />-->
  </ItemGroup>

  <ItemGroup>
    <GettextFiles Include="$(GettextBinDir)\msgcat.exe" />
    <GettextFiles Include="$(GettextBinDir)\msgfmt.exe" />
    <GettextFiles Include="$(GettextBinDir)\msgunfmt.exe" />
    <GettextFiles Include="$(GettextBinDir)\msguniq.exe" />
    <GettextFiles Include="$(GettextBinDir)\msgmerge.exe" />
    <GettextFiles Include="$(GettextBinDir)\xgettext.exe" />
    <GettextFiles Include="$(GettextBinDir)\*.dll" />
  </ItemGroup>


  <PropertyGroup>
    <GitBuildNumberFile>$(MSBuildProjectDirectory)\$(IntermediateOutputPath)\git_build_number.h</GitBuildNumberFile>
    <GitBuildNumberOldDefine Condition="Exists('$(GitBuildNumberFile)')">$([System.IO.File]::ReadAllText($(GitBuildNumberFile)).Trim())</GitBuildNumberOldDefine>
  </PropertyGroup>
  <Target Name="GetGitVersion" BeforeTargets="ClCompile">
    <GitCommits>
      <Output TaskParameter="CommitsCount" PropertyName="GitBuildNumber" />
    </GitCommits>
    <CreateProperty Value="#define POEDIT_GIT_BUILD_NUMBER $(GitBuildNumber)">
      <Output TaskParameter="Value" PropertyName="GitBuildNumberDefine"/>
    </CreateProperty>
    <Message Importance="High" Text="Updating git build number to $(GitBuildNumber)..."
             Condition="$(GitBuildNumberDefine)!=$(GitBuildNumberOldDefine)" />
    <WriteLinesToFile File="$(GitBuildNumberFile)" Lines="$(GitBuildNumberDefine)" Overwrite="true"
                      Condition="$(GitBuildNumberDefine)!=$(GitBuildNumberOldDefine)" />
    </Target>
    

  <Target Name="CopyDLLs" AfterTargets="Link">
    <Message Importance="High" Text="Copying 3rd party DLLs to $(OutDir)" />
    <Copy
      SourceFiles="@(DLLs)"
      DestinationFolder="$(OutDir)"
      SkipUnchangedFiles="true"
    />
  </Target>

 
  <Target Name="CopyDataFiles" AfterTargets="Link">
    <Message Importance="High" Text="Copying resources to $(ResourcesOutDir)" />
    <MakeDir Directories="$(ResourcesOutDir)" />
    <Copy
      SourceFiles="@(DataFiles)"
      DestinationFolder="$(ResourcesOutDir)"
      SkipUnchangedFiles="true"
    />
  </Target>


  <Target Name="CopyTranslations_Poedit" AfterTargets="Link"
          Inputs="@(TranslationFiles)"
          Outputs="@(TranslationFiles->'$(TranslationsOutDir)%(Filename)\poedit.mo')">
    <MakeDir Directories="@(TranslationFiles->'$(TranslationsOutDir)\%(Filename)')" />
    <Exec Command='$(Msgfmt) -o "$(TranslationsOutDir)%(TranslationFiles.Filename)\poedit.mo" @(TranslationFiles)' />
  </Target>

  <Target Name="CopyTranslations_WX" AfterTargets="Link"
        Inputs="@(TranslationFilesWX)"
        Outputs="@(TranslationFilesWX->'$(TranslationsOutDir)%(Filename)\wxstd.mo')">
    <MakeDir Directories="@(TranslationFilesWX->'$(TranslationsOutDir)\%(Filename)')" />
    <Exec Command='$(Msgfmt) -o "$(TranslationsOutDir)%(TranslationFilesWX.Filename)\wxstd.mo" @(TranslationFilesWX)' />
  </Target>

  <Target Name="CopyTranslations_WXMSW" AfterTargets="Link"
        Inputs="@(TranslationFilesWXMSW)"
        Outputs="@(TranslationFilesWXMSW->'$(TranslationsOutDir)%(Filename)\wxmsw.mo')">
    <MakeDir Directories="@(TranslationFilesWXMSW->'$(TranslationsOutDir)\%(Filename)')" />
    <Exec Command='$(Msgfmt) -o "$(TranslationsOutDir)%(TranslationFilesWXMSW.Filename)\wxmsw.mo" @(TranslationFilesWXMSW)' />
  </Target>


  <Target Name="CleanDataFiles" AfterTargets="Clean">
    <Message Importance="High" Text="Cleaning resources, translations etc." />
    <RemoveDir Directories="$(ResourcesOutDir)" />
    <RemoveDir Directories="$(TranslationsOutDir)" />
    <RemoveDir Directories="$(GettextOutDir)" />
  </Target>


  <Target Name="CopyGettextTools" AfterTargets="Link">
    <Message Importance="High" Text="Copying gettext tools binaries to $(GettextOutDir) [@(TranslationFilesGettext)]" />
    <MakeDir Directories="$(GettextOutDir)\bin" />
    <!--<MakeDir Directories="$(GettextOutDir)\share" />-->
    <Copy
      SourceFiles="@(GettextFiles)"
      DestinationFolder="$(GettextOutDir)\bin"
      SkipUnchangedFiles="true"
    />
    <!--
    <Copy
      SourceFiles="@(TranslationFilesGettext)"
      DestinationFolder="$(GettextOutDir)\share\%(RecursiveDir)"
      SkipUnchangedFiles="true"
    />
    -->
  </Target>

</Project>
